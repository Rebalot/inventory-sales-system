// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PROCESSING
  COMPLETED
  SHIPPED
  CANCELLED
}

enum PaymentMethod {
  CREDIT_CARD
  PAYPAL
  BANK_TRANSFER
}

model Order {
  id           String       @id @default(uuid())
  orderNumber  String
  customerId   String       // ID del cliente (mockeado por ahora)
  date         DateTime     @default(now())
  total        Float
  status       OrderStatus  @default(PROCESSING)
  paymentMethod PaymentMethod
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  items        OrderItem[]

  @@map("orders")
}

model OrderItem {
  id         String   @id @default(uuid())
  orderId    String
  productId  String   // del inventory-service
  productName String  // copiado en el momento
  unitPrice  Float
  quantity   Int
  subtotal   Float

  order      Order    @relation(fields: [orderId], references: [id])

  @@map("order_items")
}

model Counter {
  id    Int    @id @default(autoincrement())
  name  String @unique  // Ej: "order"
  value Int
  @@map("counters")
}